{"version":3,"file":"static/js/807.df4eebda.chunk.js","mappings":"uKAuGA,MApGA,SAAmBA,GAEjB,IAAMC,GAAWC,EAAAA,EAAAA,QAAO,IAClBC,GAAcD,EAAAA,EAAAA,QAAO,IAGrBE,EAAYC,OAAOC,OAAP,OAAcN,QAAd,IAAcA,OAAd,EAAcA,EAAOO,QAGjCC,EAAa,SAACC,GAClBA,EAAIC,OAAOC,cAAcC,UAAY,OACtC,EAwBD,SAASC,IACP,IAAMC,EAASb,EAASc,QAAQH,UAE9BX,EAASc,QAAQH,UADJ,mBAAXE,EAC2B,QAEA,gBAEhC,CAGD,IACME,EAAa,wBAiBnB,OACE,oBAASJ,UAAU,gBAAnB,UACE,iBAAKA,UAAU,gBAAf,UACGR,EACEa,KAAI,SAACC,GAAD,OAASA,EAAIC,SAAb,IACJF,KAAI,SAACG,EAAQC,GAAT,OACH,iBAAKT,UAAU,MAAf,WACE,gBACEA,UAAU,aACVU,IAAKF,EAELG,QAASf,GADJa,IAGP,iBAAKT,UAAU,UAAf,WACE,mBAAQY,QAAS,kBA9Bf,SAACC,GACf,IAAMC,EAAOC,aAAaC,QAHX,YAIfC,QAAQC,IAAIL,GACZI,QAAQC,IAAR,UAAed,EAAf,qBAAsCU,IAEtCK,MAAM,GAAD,OAAIf,EAAJ,qBAA2BU,GAAQ,CACtCM,OAAQ,QACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAS,GAAD,OAAKZ,OAEda,MAAK,SAACC,GAAD,OAASV,QAAQC,IAAIS,EAAIC,OAAzB,GACT,CAgBoCC,CAAQrB,EAAd,EAAjB,iCACA,mBAAQI,QAAS,kBA3DZC,EA2D4BL,EA1D7CjB,EAAYY,QAAQO,IAAMG,OAC1BZ,IAFgB,IAACY,CA2DY,EAAjB,uCACA,mBAAQiB,KAAK,SAASlB,QAAS,aAA/B,2CAXD,KAiBP,gBAAKZ,UAAU,SAASY,QAzDd,SAACmB,GAEJ,mBADAA,EAAMjC,OAAOE,YAEtBX,EAASc,QAAQH,UAAY,QAEhC,EAoD+CgC,IAAK3C,EAA/C,UACE,gBAAKW,UAAU,QAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,gBAAKgC,IAAKzC,KACV,mBAAQS,UAAU,WAAWY,QAjEtB,SAACmB,GAClB9B,GACD,EA+DW,0BASb,C","sources":["component/imgrander.js"],"sourcesContent":["import { useRef } from \"react\";\r\nimport \"../css/imgrander.css\";\r\n\r\nfunction ImgRander(props) {\r\n  /** useRef 모달 영역 및 모달 이미지 영역 DOM 캐치 */\r\n  const modalRef = useRef(\"\");\r\n  const modalImgRef = useRef(\"\");\r\n\r\n  /** Object 로 전달받은 props Array로 반환 */\r\n  const propsData = Object.values(props?.imgURL);\r\n\r\n  /** imgURL 로드 시, error 발생 시 해당 element 출력안함 */\r\n  const onErrorImg = (err) => {\r\n    err.target.parentElement.className = \"error\";\r\n  };\r\n\r\n  /** 다운로드 버튼 클릭 시 이미지 다운로드 기능 */\r\n  function downloadHandler(imgURL) {\r\n    // alert(\"CORS 문제 해결 후 기능 구현 예정 ~ '༼ つ ◕_◕ ༽つ\");\r\n  }\r\n\r\n  /** 모달을 열고, 닫고 핸들링 하는 로직 */\r\n  const openModal = (img) => {\r\n    modalImgRef.current.src = img;\r\n    modalHandler();\r\n  };\r\n\r\n  const closeModal = (event) => {\r\n    modalHandler();\r\n  };\r\n\r\n  const bgClick = (event) => {\r\n    const bg = event.target.className;\r\n    if (bg === \"modalContanier\") {\r\n      modalRef.current.className = \"close\";\r\n    }\r\n  };\r\n\r\n  function modalHandler() {\r\n    const triger = modalRef.current.className;\r\n    if (triger === \"modalContanier\") {\r\n      modalRef.current.className = \"close\";\r\n    } else {\r\n      modalRef.current.className = \"modalContanier\";\r\n    }\r\n  }\r\n\r\n  /** 스크랩 버튼 클릭 시 URL 사용자에 저장 */\r\n  const USERNAME = \"USERNAME\";\r\n  const jsonServer = \"http://localhost:4000\";\r\n  const onScrap = (img) => {\r\n    const user = localStorage.getItem(USERNAME);\r\n    console.log(img);\r\n    console.log(`${jsonServer}/Profiles/${user}`);\r\n\r\n    fetch(`${jsonServer}/Profiles/${user}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        scrapImg: `${img}`,\r\n      }),\r\n    }).then((res) => console.log(res.json()));\r\n  };\r\n\r\n  return (\r\n    <section className=\"layout_imgbox\">\r\n      <div className=\"column_imgBox\">\r\n        {propsData\r\n          .map((arr) => arr.image_url)\r\n          .map((imgSrc, index) => (\r\n            <div className=\"box\">\r\n              <img\r\n                className=\"rander_img\"\r\n                src={imgSrc}\r\n                key={index}\r\n                onError={onErrorImg}\r\n              />\r\n              <div className=\"imgIcon\">\r\n                <button onClick={() => onScrap(imgSrc)}>스크랩</button>\r\n                <button onClick={() => openModal(imgSrc)}>크게보기</button>\r\n                <button type=\"button\" onClick={() => downloadHandler(imgSrc)}>\r\n                  다운로드\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        <div className=\" close\" onClick={bgClick} ref={modalRef}>\r\n          <div className=\"modal\">\r\n            <div className=\"column modalShow\">\r\n              <img ref={modalImgRef}></img>\r\n              <button className=\"modalBtn\" onClick={closeModal}>\r\n                X\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImgRander;\r\n"],"names":["props","modalRef","useRef","modalImgRef","propsData","Object","values","imgURL","onErrorImg","err","target","parentElement","className","modalHandler","triger","current","jsonServer","map","arr","image_url","imgSrc","index","src","onError","onClick","img","user","localStorage","getItem","console","log","fetch","method","headers","body","JSON","stringify","scrapImg","then","res","json","onScrap","type","event","ref"],"sourceRoot":""}